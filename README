JIG has evolved over several years of using and maintaining Debian
systems.  It attempts to capture in a single command line tool various
things I commonly do that relate to managing the system. Many of the
commands supported by wajig have been gleemed from hints and gossip on
the mailing lists, and sometimes nuggets of useful information from
the documentation.

Online documentation is available at http://wajig.togaware.com.

If you experience trouble with the display, or see what would appear
to be incomplete output from wajig, consider running the "wajig reset"
command to see if that fixes the problem.

Dirk Eddelbuettel <edd@debian.org> has also been incredibly helpful in
sponsoring wajig for inclusion in Debian and in suggesting new
commands. Also, many thanks to other users of wajig who have made
suggestions over the years.

--> words by Graham Williams & updated/fixed by Tshepang Lekhonkhobe



HACKING

setup:
$ wajig install devscripts debhelper
$ hg clone https://code.google.com/p/wajig/
$ cd wajig

build + install:
$ debuild -us -uc -b
$ sudo debi

guidelines:
* follow PEP-8 where it makes sense ($ pep8 src/wajig.py)
* run pylint on the changed files ($ pylint src/wajig.py)
* add unit tests (to "test.py") if your code is easily testable
* ensure the unit tests pass before any commits
* ensure that new features and changes are documented
* ensure that user-visible changes are mentioned in "debian/changelog"; use
  debchange from within the project root directory and do your changes there

